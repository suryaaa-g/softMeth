memberSearchIndex = [{"p":"chess","c":"Chess","l":"anyMovesLeft(boolean)"},{"p":"pieces","c":"Bishop","l":"Bishop(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"chess","c":"Chess","l":"BlackInCheck()"},{"p":"chess","c":"Chess","l":"BlackInCheck(Piece[][])","u":"BlackInCheck(pieces.Piece[][])"},{"p":"board","c":"Board","l":"board"},{"p":"board","c":"Board","l":"Board()","u":"%3Cinit%3E()"},{"p":"chess","c":"Chess","l":"changeTurn()"},{"p":"chess","c":"Chess","l":"Chess()","u":"%3Cinit%3E()"},{"p":"chess","c":"Chess","l":"convertBack(int[])"},{"p":"board","c":"Board","l":"convertCords(String)","u":"convertCords(java.lang.String)"},{"p":"chess","c":"Chess","l":"copyArray()"},{"p":"pieces","c":"Piece","l":"didMove()"},{"p":"pieces","c":"Piece","l":"enPassTurn"},{"p":"chess","c":"Chess","l":"findKing(Piece[][], boolean)","u":"findKing(pieces.Piece[][],boolean)"},{"p":"pieces","c":"Piece","l":"getEnpassant()"},{"p":"pieces","c":"Piece","l":"getEnPassTurn()"},{"p":"pieces","c":"Piece","l":"getTeam()"},{"p":"pieces","c":"Piece","l":"getType()"},{"p":"board","c":"Board","l":"init()"},{"p":"pieces","c":"Bishop","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"King","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Knight","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Pawn","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Piece","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Rook","l":"isMoveValid(String, String)","u":"isMoveValid(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Bishop","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"King","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Knight","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Pawn","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Piece","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Rook","l":"isPathClear(String, String)","u":"isPathClear(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"isPathClearDiagonals(String, String)","u":"isPathClearDiagonals(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"isPathClearHorizontal(String, String)","u":"isPathClearHorizontal(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"isPathClearVertical(String, String)","u":"isPathClearVertical(java.lang.String,java.lang.String)"},{"p":"pieces","c":"King","l":"King(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Knight","l":"Knight(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"chess","c":"Chess","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"pieces","c":"Bishop","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"King","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Knight","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Pawn","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Piece","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Rook","l":"move(String, String)","u":"move(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Pawn","l":"Pawn(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Piece","l":"Piece(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"board","c":"Board","l":"printBoard()"},{"p":"board","c":"Board","l":"printPattern(int, int)","u":"printPattern(int,int)"},{"p":"chess","c":"Chess","l":"printTurn()"},{"p":"pieces","c":"Pawn","l":"Promotion(String, String, String)","u":"Promotion(java.lang.String,java.lang.String,java.lang.String)"},{"p":"pieces","c":"Queen","l":"Queen(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"chess","c":"Chess","l":"resign()"},{"p":"pieces","c":"Rook","l":"Rook(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"chess","c":"Chess","l":"selfCheck(String, String)","u":"selfCheck(java.lang.String,java.lang.String)"},{"p":"pieces","c":"Piece","l":"setEnpassant(boolean)"},{"p":"pieces","c":"Piece","l":"setMove(boolean)"},{"p":"chess","c":"Chess","l":"testMove"},{"p":"chess","c":"Chess","l":"turnCount"},{"p":"chess","c":"Chess","l":"validCoords(int[], int[])","u":"validCoords(int[],int[])"},{"p":"chess","c":"Chess","l":"WhiteInCheck()"},{"p":"chess","c":"Chess","l":"WhiteInCheck(Piece[][])","u":"WhiteInCheck(pieces.Piece[][])"}];updateSearchResults();